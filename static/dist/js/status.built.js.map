{"version":3,"sources":["../../js/status.js"],"names":["monthArray","rawDataIsLoading","statusPagePassword","groupByWorker","hashFnv32a","str","asString","seed","i","l","hval","undefined","length","charCodeAt","toString","substr","loadRawData","$","ajax","url","type","data","dataType","beforeSend","complete","addTable","hash","table","appendTo","find","click","tableSort","addMainWorker","worker","processMainWorker","html","addWorker","mainWorkerHash","workerHash","row","processWorker","lastModified","Date","getHours","getMinutes","slice","getSeconds","getDate","getMonth","getFullYear","parseResult","result","each","main_workers","workers","updateStatus","firstRun","done","submit","event","preventDefault","val","login","remove","window","setInterval","effect","change","checked","parents","eq","rows","toArray","sort","compare","index","asc","reverse","append","a","b","valA","getCellValue","valB","isNumeric","localeCompare","children"],"mappings":"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","file":"status.built.js","sourcesContent":["/* Shared */\nvar monthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n\n/* Main stats page */\nvar rawDataIsLoading = false\nvar statusPagePassword = false\nvar groupByWorker = true\n\n/**\n * Calculate a 32 bit FNV-1a hash\n * Found here: https://gist.github.com/vaiorabbit/5657561\n * Ref.: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param {string} str the input value\n * @param {boolean} [asString=false] set to true to return the hash value as\n *     8-digit hex string instead of an integer\n * @param {integer} [seed] optionally pass the hash of the previous chunk\n * @returns {integer | string}\n */\nfunction hashFnv32a (str, asString, seed) {\n  /* jshint bitwise:false */\n  var i\n  var l\n  var hval = (seed === undefined) ? 0x811c9dc5 : seed\n\n  for (i = 0, l = str.length; i < l; i++) {\n    hval ^= str.charCodeAt(i)\n    hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24)\n  }\n\n  if (asString) {\n    // Convert to 8 digit hex string\n    return ('0000000' + (hval >>> 0).toString(16)).substr(-8)\n  }\n  return hval >>> 0\n}\n\nfunction loadRawData () {\n  return $.ajax({\n    url: 'status',\n    type: 'post',\n    data: {\n      'password': statusPagePassword\n    },\n    dataType: 'json',\n    beforeSend: function () {\n      if (rawDataIsLoading) {\n        return false\n      } else {\n        rawDataIsLoading = true\n      }\n    },\n    complete: function () {\n      rawDataIsLoading = false\n    }\n  })\n}\n\nfunction addTable (hash) {\n  var table = `\n    <div class=\"status_table\" id=\"table_${hash}\">\n      <div class=\"status_row header\">\n        <div class=\"status_cell\">\n          Username\n        </div>\n        <div class=\"status_cell\">\n          Success\n        </div>\n        <div class=\"status_cell\">\n          Fail\n        </div>\n        <div class=\"status_cell\">\n          No Items\n        </div>\n        <div class=\"status_cell\">\n          Skipped\n        </div>\n        <div class=\"status_cell\">\n          Last Modified\n        </div>\n        <div class=\"status_cell\">\n          Message\n        </div>\n      </div>\n    </div>\n  `\n\n  table = $(table)\n  table.appendTo('#status_container')\n  table.find('.status_row.header .status_cell').click(tableSort)\n}\n\nfunction addMainWorker (hash) {\n  var worker = `\n    <div id=\"worker_${hash}\" class=\"worker\">\n      <span id=\"name_${hash}\" class=\"name\"></span>\n      <span id=\"method_${hash}\" class=\"method\"></span>\n      <span id=\"message_${hash}\" class=\"message\"></span>\n    </div>\n  `\n\n  $(worker).appendTo('#status_container')\n  addTable(hash)\n}\n\nfunction processMainWorker (i, worker) {\n  var hash = hashFnv32a(worker['worker_name'], true)\n\n  if ($('#worker_' + hash).length === 0) {\n    addMainWorker(hash)\n  }\n\n  $('#name_' + hash).html(worker['worker_name'])\n  $('#method_' + hash).html('(' + worker['method'] + ')')\n  $('#message_' + hash).html(worker['message'])\n}\n\nfunction addWorker (mainWorkerHash, workerHash) {\n  var row = `\n    <div id=\"row_${workerHash}\" class=\"status_row\">\n      <div id=\"username_${workerHash}\" class=\"status_cell\"/>\n      <div id=\"success_${workerHash}\"  class=\"status_cell\"/>\n      <div id=\"fail_${workerHash}\"     class=\"status_cell\"/>\n      <div id=\"no_items_${workerHash}\"  class=\"status_cell\"/>\n      <div id=\"skip_${workerHash}\"     class=\"status_cell\"/>\n      <div id=\"lastmod_${workerHash}\"  class=\"status_cell\"/>\n      <div id=\"message_${workerHash}\"  class=\"status_cell\"/>\n    </div>\n  `\n\n  $(row).appendTo('#table_' + mainWorkerHash)\n}\n\nfunction processWorker (i, worker) {\n  var hash = hashFnv32a(worker['username'], true)\n  var mainWorkerHash\n  if (groupByWorker) {\n    mainWorkerHash = hashFnv32a(worker['worker_name'], true)\n    if ($('#table_' + mainWorkerHash).length === 0) {\n      return\n    }\n  } else {\n    mainWorkerHash = 'global'\n    if ($('#table_global').length === 0) {\n      addTable('global')\n    }\n  }\n\n  if ($('#row_' + hash).length === 0) {\n    addWorker(mainWorkerHash, hash)\n  }\n\n  var lastModified = new Date(worker['last_modified'])\n  lastModified = lastModified.getHours() + ':' +\n    ('0' + lastModified.getMinutes()).slice(-2) + ':' +\n    ('0' + lastModified.getSeconds()).slice(-2) + ' ' +\n    lastModified.getDate() + ' ' +\n    monthArray[lastModified.getMonth()] + ' ' +\n    lastModified.getFullYear()\n\n  $('#username_' + hash).html(worker['username'])\n  $('#success_' + hash).html(worker['success'])\n  $('#fail_' + hash).html(worker['fail'])\n  $('#no_items_' + hash).html(worker['no_items'])\n  $('#skip_' + hash).html(worker['skip'])\n  $('#lastmod_' + hash).html(lastModified)\n  $('#message_' + hash).html(worker['message'])\n}\n\nfunction parseResult (result) {\n  if (groupByWorker) {\n    $.each(result.main_workers, processMainWorker)\n  }\n  $.each(result.workers, processWorker)\n}\n\nfunction updateStatus (firstRun) {\n  loadRawData().done(function (result) {\n    parseResult(result)\n  })\n}\n\n$('#password_form').submit(function (event) {\n  event.preventDefault()\n  statusPagePassword = $('#password').val()\n  loadRawData().done(function (result) {\n    if (result.login === 'ok') {\n      $('.status_form').remove()\n      window.setInterval(updateStatus, 5000)\n      parseResult(result)\n    } else {\n      $('.status_form').effect('bounce')\n    }\n  })\n})\n\n$('#groupbyworker-switch').change(function () {\n  groupByWorker = this.checked\n  $('#status_container .status_table').remove()\n  $('#status_container .worker').remove()\n  if (statusPagePassword) {\n    updateStatus()\n  }\n})\n\nfunction tableSort () {\n  var table = $(this).parents('.status_table').eq(0)\n  var rows = table.find('.status_row:gt(0)').toArray().sort(compare($(this).index()))\n  this.asc = !this.asc\n  if (!this.asc) {\n    rows = rows.reverse()\n  }\n  for (var i = 0; i < rows.length; i++) {\n    table.append(rows[i])\n  }\n}\n\nfunction compare (index) {\n  return function (a, b) {\n    var valA = getCellValue(a, index)\n    var valB = getCellValue(b, index)\n    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.localeCompare(valB)\n  }\n}\n\nfunction getCellValue (row, index) {\n  return $(row).children('.status_cell').eq(index).html()\n}\n"]}